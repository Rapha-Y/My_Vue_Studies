{"remainingRequest":"C:\\Users\\Anni\\Documents\\Projects\\My_Vue_Studies\\quiz\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anni\\Documents\\Projects\\My_Vue_Studies\\quiz\\src\\components\\QuestionBox.vue?vue&type=style&index=0&id=62ab2b85&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Anni\\Documents\\Projects\\My_Vue_Studies\\quiz\\src\\components\\QuestionBox.vue","mtime":1595339843771},{"path":"C:\\Users\\Anni\\Documents\\Projects\\My_Vue_Studies\\quiz\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anni\\Documents\\Projects\\My_Vue_Studies\\quiz\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Anni\\Documents\\Projects\\My_Vue_Studies\\quiz\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anni\\Documents\\Projects\\My_Vue_Studies\\quiz\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anni\\Documents\\Projects\\My_Vue_Studies\\quiz\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxpc3QtZ3JvdXAgewogICAgbWFyZ2luLWJvdHRvbTogMTVweDsKfQoKLmxpc3QtZ3JvdXAtaXRlbTpob3ZlciB7CiAgICBiYWNrZ3JvdW5kOiAjRUVFOwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgouYnRuIHsKICAgIG1hcmdpbjogMCA1cHg7Cn0KCi5zZWxlY3RlZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7Cn0KCi5jb3JyZWN0IHsKICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JlZW47Cn0KCi5pbmNvcnJlY3QgewogICAgYmFja2dyb3VuZC1jb2xvcjogcmVkOwp9Cg=="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"question-box-container\">\r\n        <b-jumbotron>\r\n            <template slot=\"lead\">\r\n                {{ currentQuestion.question }}\r\n            </template>\r\n\r\n            <hr class=\"my-4\" />\r\n\r\n            <b-list-group>\r\n                <b-list-group-item \r\n                    v-for=\"(answer, index) in shuffledAnswers\" \r\n                    :key=\"index\" \r\n                    @click.prevent=\"selectAnswer(index)\"\r\n                    :class=\"answerClass(index)\"\r\n                >\r\n                    {{ answer }}\r\n                </b-list-group-item>\r\n            </b-list-group>\r\n\r\n            <b-button \r\n                variant=\"primary\" \r\n                @click=\"submitAnswer\" \r\n                :disabled=\"selectedIndex === null || answered\"\r\n            >\r\n                Submit\r\n            </b-button>\r\n            <b-button @click=\"next\" variant=\"success\">\r\n                Next\r\n            </b-button>\r\n        </b-jumbotron>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n    props: {\r\n        currentQuestion: Object,\r\n        next: Function,\r\n        increment: Function\r\n    },\r\n    data: function() {\r\n        return {\r\n            selectedIndex: null,\r\n            correctIndex: null,\r\n            shuffledAnswers: [],\r\n            answered: false\r\n        }\r\n    },\r\n    computed: {\r\n        answers() {\r\n            let answers = [...this.currentQuestion.incorrect_answers]\r\n            answers.push(this.currentQuestion.correct_answer)\r\n            return answers\r\n        }\r\n    },\r\n    watch: {\r\n        currentQuestion: {\r\n            immediate: true,\r\n            handler() {\r\n                this.selectedIndex = null\r\n                this.answered = false\r\n                this.shuffleAnswers()\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        selectAnswer(index) {\r\n            this.selectedIndex = index\r\n        },\r\n        submitAnswer() {\r\n            let isCorrect = false\r\n\r\n            if (this.selectedIndex === this.correctIndex) {\r\n                isCorrect = true\r\n            }\r\n            this.answered = true\r\n\r\n            this.increment(isCorrect)\r\n        },\r\n        shuffleAnswers() {\r\n            let answers = [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\r\n            this.shuffledAnswers = _.shuffle(answers)\r\n            this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\r\n        },\r\n        answerClass(index) {\r\n            let answerClass = ''\r\n\r\n            if (!this.answered && this.selectedIndex === index) {\r\n                answerClass = 'selected'\r\n            } else if (this.answered && this.correctIndex === index) {\r\n                answerClass = 'correct'\r\n            } else if (this.answered && this.selectedIndex === index && this.correctIndex !== index) {\r\n                answerClass = 'incorrect'\r\n            }\r\n\r\n            return answerClass\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .list-group {\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    .list-group-item:hover {\r\n        background: #EEE;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .btn {\r\n        margin: 0 5px;\r\n    }\r\n\r\n    .selected {\r\n        background-color: lightblue;\r\n    }\r\n\r\n    .correct {\r\n        background-color: lightgreen;\r\n    }\r\n\r\n    .incorrect {\r\n        background-color: red;\r\n    }\r\n</style>"]}]}